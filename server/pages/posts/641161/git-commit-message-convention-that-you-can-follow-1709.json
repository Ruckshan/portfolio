{"pageProps":{"post":{"type_of":"article","id":641161,"title":"Git commit message convention that you can follow!","description":"Motivation of this blog is to curate all information at one place and to make more people aware about...","readable_publish_date":"Mar 21","slug":"git-commit-message-convention-that-you-can-follow-1709","path":"/i5han3/git-commit-message-convention-that-you-can-follow-1709","url":"https://dev.to/i5han3/git-commit-message-convention-that-you-can-follow-1709","comments_count":45,"public_reactions_count":1456,"collection_id":null,"published_timestamp":"2021-03-21T07:37:38Z","positive_reactions_count":1456,"cover_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--La3iZ60x--/c_imagga_scale,f_auto,fl_progressive,h_420,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a34rqop9fndvu0goccot.jpg","social_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--WsKiPaQ---/c_imagga_scale,f_auto,fl_progressive,h_500,q_auto,w_1000/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/a34rqop9fndvu0goccot.jpg","canonical_url":"https://dev.to/i5han3/git-commit-message-convention-that-you-can-follow-1709","created_at":"2021-03-21T07:37:38Z","edited_at":null,"crossposted_at":null,"published_at":"2021-03-21T07:37:38Z","last_comment_at":"2021-11-14T22:49:18Z","reading_time_minutes":1,"tag_list":["github","webdev","productivity","git"],"tags":["github","webdev","productivity","git"],"body_html":"<p>Motivation of this blog is to curate all information at one place and to make more people aware about standards followed by industry.</p>\n\n<p>Let's get started.....</p>\n\n<blockquote>\n<p>A typical git commit message will look like<br>\n</p>\n</blockquote>\n\n<div class=\"highlight js-code-highlight\">\n<pre class=\"highlight plaintext\"><code>&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;\n</code></pre>\n<div class=\"highlight__panel js-actions-panel\">\n<div class=\"highlight__panel-action js-fullscreen-code-action\">\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-on\"><title>Enter fullscreen mode</title>\n    <path d=\"M16 3h6v6h-2V5h-4V3zM2 3h6v2H4v4H2V3zm18 16v-4h2v6h-6v-2h4zM4 19h4v2H2v-6h2v4z\"></path>\n</svg>\n\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewbox=\"0 0 24 24\" class=\"highlight-action crayons-icon highlight-action--fullscreen-off\"><title>Exit fullscreen mode</title>\n    <path d=\"M18 7h4v2h-6V3h2v4zM8 9H2V7h4V3h2v6zm10 8v4h-2v-6h6v2h-4zM8 15v6H6v-4H2v-2h6z\"></path>\n</svg>\n\n</div>\n</div>\n</div>\n\n\n\n<h2>\n  <a name=\"type-must-be-one-of-the-following-mentioned-below\" href=\"#type-must-be-one-of-the-following-mentioned-below\">\n  </a>\n  \"type\" must be one of the following mentioned below!\n</h2>\n\n<ul>\n<li>\n<code>build</code>: Build related changes (eg: npm related/ adding external dependencies) </li>\n<li>\n<code>chore</code>: A code change that external user won't see (eg: change to .gitignore file or .prettierrc file)</li>\n<li>\n<code>feat</code>: A new feature</li>\n<li>\n<code>fix</code>: A bug fix</li>\n<li>\n<code>docs</code>: Documentation related changes</li>\n<li>\n<code>refactor</code>: A code that neither fix bug nor adds a feature. (eg: You can use this when there is semantic changes like renaming a variable/ function name)</li>\n<li>\n<code>perf</code>: A code that improves performance</li>\n<li>\n<code>style</code>: A code that is related to styling</li>\n<li>\n<code>test</code>: Adding new test or making changes to existing test</li>\n</ul>\n\n<h2>\n  <a name=\"scope-is-optional\" href=\"#scope-is-optional\">\n  </a>\n  \"scope\" is optional\n</h2>\n\n<ul>\n<li>Scope must be noun and it represents the section of the section of the codebase</li>\n<li>\n<a href=\"http://karma-runner.github.io/1.0/dev/git-commit-msg.html\">Refer this link for example related to scope</a> </li>\n</ul>\n\n<h2>\n  <a name=\"subject\" href=\"#subject\">\n  </a>\n  \"subject\"\n</h2>\n\n<ul>\n<li>use imperative, present tense (eg: use \"add\" instead of \"added\" or \"adds\")</li>\n<li>don't use dot(.) at end</li>\n<li>don't capitalize first letter</li>\n</ul>\n\n<p><a href=\"https://github.com/eslint/eslint/commits/master\">Refer this link for more practical examples of commit messages</a></p>\n\n<h4>\n  <a name=\"references\" href=\"#references\">\n  </a>\n  References:\n</h4>\n\n<ul>\n<li><a href=\"https://www.conventionalcommits.org/en/v1.0.0/\">https://www.conventionalcommits.org/en/v1.0.0/</a></li>\n<li><a href=\"https://gist.github.com/joshbuchea/6f47e86d2510bce28f8e7f42ae84c716\">https://gist.github.com/joshbuchea/6f47e86d2510bce28f8e7f42ae84c716</a></li>\n<li><a href=\"https://github.com/fteem/git-semantic-commits\">https://github.com/fteem/git-semantic-commits</a></li>\n</ul>\n\n","body_markdown":"Motivation of this blog is to curate all information at one place and to make more people aware about standards followed by industry.\n\nLet's get started.....\n\n> A typical git commit message will look like\n```\n<type>(<scope>): <subject>\n```\n\n## \"type\" must be one of the following mentioned below!\n* `build`: Build related changes (eg: npm related/ adding external dependencies) \n* `chore`: A code change that external user won't see (eg: change to .gitignore file or .prettierrc file)\n* `feat`: A new feature\n* `fix`: A bug fix\n* `docs`: Documentation related changes\n* `refactor`: A code that neither fix bug nor adds a feature. (eg: You can use this when there is semantic changes like renaming a variable/ function name)\n* `perf`: A code that improves performance\n* `style`: A code that is related to styling\n* `test`: Adding new test or making changes to existing test\n\n## \"scope\" is optional\n* Scope must be noun and it represents the section of the section of the codebase\n* [Refer this link for example related to scope](http://karma-runner.github.io/1.0/dev/git-commit-msg.html) \n\n## \"subject\"\n* use imperative, present tense (eg: use \"add\" instead of \"added\" or \"adds\")\n* don't use dot(.) at end\n* don't capitalize first letter\n\n[Refer this link for more practical examples of commit messages](https://github.com/eslint/eslint/commits/master)\n\n#### References: \n* [https://www.conventionalcommits.org/en/v1.0.0/](https://www.conventionalcommits.org/en/v1.0.0/)\n* [https://gist.github.com/joshbuchea/6f47e86d2510bce28f8e7f42ae84c716](https://gist.github.com/joshbuchea/6f47e86d2510bce28f8e7f42ae84c716)\n* [https://github.com/fteem/git-semantic-commits](https://github.com/fteem/git-semantic-commits)","user":{"name":"Ishan Makadia","username":"i5han3","twitter_username":"i5han3","github_username":null,"website_url":null,"profile_image":"https://res.cloudinary.com/practicaldev/image/fetch/s--ttBP0Joh--/c_fill,f_auto,fl_progressive,h_640,q_auto,w_640/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/422697/0a4ad47b-d452-40cf-af58-52a25da058b6.PNG","profile_image_90":"https://res.cloudinary.com/practicaldev/image/fetch/s--6XxAsuAj--/c_fill,f_auto,fl_progressive,h_90,q_auto,w_90/https://dev-to-uploads.s3.amazonaws.com/uploads/user/profile_image/422697/0a4ad47b-d452-40cf-af58-52a25da058b6.PNG"},"readingTime":"2 min read"}},"__N_SSG":true}