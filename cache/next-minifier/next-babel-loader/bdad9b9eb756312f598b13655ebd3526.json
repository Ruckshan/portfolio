{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport Link from 'next/link';\nimport React from 'react';\nimport { trackEvent } from '../../lib/ga';\n/**\r\n * Props for {@link TrackLink}.\r\n */\n\n/**\r\n * HOC for NextJS's link that reports to Google analytics.\r\n * @param param Props of type {@link TrackLinkProps}.\r\n */\nconst TrackLink = (_ref) => {\n  let {\n    label,\n    value = ''\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"label\", \"value\"]);\n\n  const onClick = () => {\n    trackEvent({\n      action: 'click',\n      category: 'Navigation',\n      label,\n      value\n    });\n  };\n\n  return __jsx(\"div\", {\n    role: \"link\",\n    tabIndex: -1,\n    onClick: () => onClick(),\n    onKeyPress: () => onClick()\n  }, __jsx(Link, rest));\n};\n\nexport default TrackLink;","map":null,"metadata":{},"sourceType":"module"}