{"ast":null,"code":"var __jsx = React.createElement;\nimport { motion } from 'framer-motion';\nimport Link from 'next/link';\nimport React, { useRef } from 'react';\nimport { addCamelCaseKeys, formatDate } from '../../lib';\nimport s from './PostTile.module.scss';\n/**\r\n * Props for {@link PostTile}.\r\n */\n\n/**\r\n * Tile component to represent each blog post.\r\n */\nvar PostTile = function PostTile(_ref) {\n  var post = _ref.post;\n  var delay = Math.random() * 1;\n  var styles = addCamelCaseKeys(s);\n  var ref = useRef(undefined);\n\n  var handleMouseMove = function handleMouseMove(event) {\n    var _ref$current;\n\n    var x, y;\n\n    if (event.touches) {\n      x = event.touches[0].clientX;\n      y = event.touches[0].clientY;\n    } else {\n      x = event.clientX;\n      y = event.clientY;\n    }\n\n    var r = ref === null || ref === void 0 ? void 0 : (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.getBoundingClientRect();\n    var dx = (x - (r.left + Math.floor(r.width / 2))) * -1 / 10;\n    var dy = (y - (r.top + Math.floor(r.height / 2))) * -1 / 10;\n    ref.current.style.transform = \"translate3d(\".concat(dx, \"px, \").concat(dy, \"px, 0px)\");\n  };\n\n  var handleMouseLeave = function handleMouseLeave() {\n    ref.current.style.transform = \"translate3d(0px, 0px, 0px)\";\n  };\n\n  return __jsx(\"div\", {\n    className: \"w-full md:w-1/2 lg:w-4/12 p-4 overflow-hidden\"\n  }, __jsx(motion.div, {\n    className: \"relative overflow-hidden h-full\",\n    initial: {\n      scale: 1\n    },\n    exit: {\n      transition: {\n        duration: 0.3,\n        ease: 'circIn'\n      },\n      scale: 0\n    }\n  }, __jsx(motion.div, {\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1,\n      transition: {\n        delay: delay + 0.75,\n        duration: 0.6\n      }\n    },\n    className: \"h-full bg-dark-tint shadow-md rounded overflow-hidden hover:border-dark hover:border-8`\"\n  }, __jsx(motion.div, {\n    ref: ref,\n    className: \"relative p-4 transtition duration-100\",\n    onTouchMove: handleMouseMove,\n    onTouchEnd: handleMouseLeave,\n    onMouseMove: handleMouseMove,\n    onMouseLeave: handleMouseLeave\n  }, __jsx(Link, {\n    href: \"/posts/[id]/[slug]\",\n    as: \"/posts/\".concat(post.id, \"/\").concat(post.slug)\n  }, __jsx(\"a\", null, __jsx(\"div\", {\n    className: \"\".concat(styles.textFill, \" relative text-xl uppercase font-black overflow-hidden\"),\n    title: post.title\n  }, post.title))), __jsx(\"div\", {\n    className: \"text-xs text-secondary font-black mt-2 mb-4\"\n  }, __jsx(\"div\", {\n    className: \"mb-1\"\n  }, __jsx(\"span\", null, formatDate(post.published_timestamp)), __jsx(\"span\", {\n    className: \"px-2\"\n  }, \"\\u2022\"), __jsx(\"span\", null, \"15 mins\")), __jsx(\"div\", null, post.tag_list && post.tag_list.map(function (tag) {\n    return __jsx(Link, {\n      key: tag,\n      href: \"/posts/tag/[tag]\",\n      as: \"/posts/tag/\".concat(tag)\n    }, __jsx(\"a\", {\n      className: \"ul-hover-effect mr-2\"\n    }, \"#\", tag));\n  }))), __jsx(\"p\", null, post.description))), __jsx(motion.div, {\n    className: \"absolute top-0 left-0 w-full h-full\",\n    style: {\n      background: delay > 0.4 ? 'var(--color-secondary)' : 'var(--color-primary)'\n    },\n    initial: {\n      transform: 'translateX(-101%)'\n    },\n    animate: {\n      transform: 'translateX(98%)',\n      transition: {\n        delay: delay,\n        duration: 1.5,\n        ease: 'easeInOut'\n      }\n    }\n  })));\n};\n\nexport default PostTile;","map":null,"metadata":{},"sourceType":"module"}