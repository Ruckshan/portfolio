{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { motion } from 'framer-motion';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport React, { useMemo } from 'react';\nimport { addCamelCaseKeys } from '../../../../lib';\nimport s from './MenuTile.module.scss';\nvar directions = {\n  top: {\n    open: {\n      y: 0\n    },\n    closed: {\n      y: '100%'\n    }\n  },\n  right: {\n    open: {\n      x: 0\n    },\n    closed: {\n      x: '100%'\n    }\n  },\n  bottom: {\n    open: {\n      y: 0\n    },\n    closed: {\n      y: '-100%'\n    }\n  },\n  left: {\n    open: {\n      x: 0\n    },\n    closed: {\n      x: '-100%'\n    }\n  }\n};\n/**\r\n * Props for the {@link MenuTile} component.\r\n */\n\n/**\r\n * The individual menu tiles with the tile section of the menu.\r\n * @param Params of type {@link MenuTileProps}.\r\n */\nvar MenuTile = function MenuTile(_ref) {\n  var direction = _ref.direction,\n      title = _ref.title,\n      subTitle = _ref.subTitle,\n      url = _ref.url,\n      theme = _ref.theme,\n      _ref$onClick = _ref.onClick,\n      _onClick = _ref$onClick === void 0 ? function () {\n    return {};\n  } : _ref$onClick;\n\n  var styles = useMemo(function () {\n    return addCamelCaseKeys(s);\n  }, []);\n  var router = useRouter();\n  var variants = {\n    open: _objectSpread(_objectSpread({\n      opacity: 1\n    }, directions[direction].open), {}, {\n      transition: {\n        when: 'beforeChildren',\n        staggerChildren: 0.2,\n        duration: 0.6,\n        ease: [0.83, 0, 0.17, 1]\n      }\n    }),\n    closed: _objectSpread(_objectSpread({\n      opacity: 0\n    }, directions[direction].closed), {}, {\n      transition: {\n        duration: 0.5\n      }\n    })\n  };\n  var contentVariants = {\n    open: _objectSpread(_objectSpread({\n      opacity: 1\n    }, directions[direction].open), {}, {\n      transition: {\n        duration: 0.9,\n        bounce: 0.1,\n        ease: [0.22, 1, 0.36, 1]\n      }\n    }),\n    closed: _objectSpread({\n      opacity: 0\n    }, directions[direction].closed)\n  };\n  return __jsx(\"div\", {\n    className: \"\".concat(styles.tile, \" w-1/2 overflow-hidden\")\n  }, __jsx(motion.div, {\n    className: \"flex h-full flex-col justify-end px-4 py-8 bg-dark-shade text-primary\",\n    variants: variants,\n    initial: 'closed'\n  }, __jsx(Link, {\n    href: url\n  }, __jsx(motion.a, {\n    className: \"\".concat(styles.textFill, \" \").concat(theme === 'primary' ? styles.textFillSecondary : styles.textFillPrimary, \" text-\").concat(theme, \" block text-3xl lg:text-5xl font-black uppercase cursor-pointer\"),\n    variants: contentVariants,\n    initial: 'closed',\n    title: title,\n    onClick: function onClick(event) {\n      _onClick();\n\n      setTimeout(function () {\n        return router.push(url);\n      }, 300);\n      event.preventDefault();\n    }\n  }, title)), __jsx(motion.p, {\n    className: \"text-base text-\".concat(theme, \" lg:text-xl\"),\n    variants: contentVariants,\n    initial: 'closed'\n  }, subTitle)));\n};\n\nexport default MenuTile;","map":null,"metadata":{},"sourceType":"module"}