{"ast":null,"code":"import { SitemapStream, streamToPromise } from 'sitemap';\nimport { getNuggets } from './nuggets';\nimport { getPosts } from './posts';\n/**\r\n * Serverless function that generate sitemap for the website.\r\n */\n\nexport default (async (req, res) => {\n  try {\n    const smStream = new SitemapStream({\n      hostname: process.env.NEXT_PUBLIC_FRONT_END_DOMAIN\n    });\n    smStream.write({\n      url: `/about`,\n      changefreq: 'monthly'\n    });\n    smStream.write({\n      url: `/works`,\n      changefreq: 'monthly'\n    });\n    smStream.write({\n      url: `/posts`,\n      changefreq: 'daily'\n    });\n    smStream.write({\n      url: `/nuggets`,\n      changefreq: 'daily'\n    }); // List of posts.\n\n    const posts = await getPosts({\n      page: '1',\n      per_page: '100'\n    });\n    posts.forEach(post => {\n      smStream.write({\n        url: `/posts/${post.id}/${post.slug}`,\n        changefreq: 'daily',\n        priority: 0.9\n      });\n    }); // List of nuggets.\n\n    const nuggets = await getNuggets({\n      page: '1',\n      per_page: '100'\n    });\n    nuggets.forEach(nugget => {\n      smStream.write({\n        url: `/nuggets/${nugget.id}/${nugget.slug}`,\n        changefreq: 'daily',\n        priority: 0.9\n      });\n    }); // End sitemap stream.\n\n    smStream.end(); // XML sitemap string.\n\n    const sitemapOutput = (await streamToPromise(smStream)).toString(); // Change headers.\n\n    res.writeHead(200, {\n      'Content-Type': 'application/xml'\n    }); // Display output to user.\n\n    res.end(sitemapOutput);\n  } catch (e) {\n    console.error(e);\n    res.send(JSON.stringify(e));\n  }\n});","map":null,"metadata":{},"sourceType":"module"}