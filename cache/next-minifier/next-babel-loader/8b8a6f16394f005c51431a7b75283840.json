{"ast":null,"code":"var __jsx = React.createElement;\nimport { motion } from 'framer-motion';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport React from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport PageBody from '../../components/page-body/PageBody';\nimport PageHeader from '../../components/page-header/PageHeader';\nimport Page from '../../components/page/Page';\nimport PostTile from '../../components/post-tile/PostTile.component';\nimport { usePosts } from './PostsPage.hooks';\n/**\r\n * Animation variants for the posts container element.\r\n */\n\nconst postsContainerVariants = {\n  initial: {\n    opacity: 0\n  },\n  enter: {\n    delay: 0.6,\n    opacity: 1,\n    transition: {\n      when: 'beforeChildren'\n    }\n  }\n};\n/**\r\n * Props for {@link PostsPage}.\r\n */\n\n/**\r\n * Page that displays a list of blog posts.\r\n */\nconst PostsPage = ({\n  posts: initialPosts = []\n}) => {\n  const {\n    query: {\n      tag = ''\n    }\n  } = useRouter();\n  const [posts, hasMore, fetchMorePosts] = usePosts(initialPosts, String(tag));\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Posts \", tag && `| - Articles about${tag}`), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: `Posts ${tag ? '| - Articles about' + tag : ''}`\n  }), __jsx(\"meta\", {\n    property: \"og:type\",\n    content: \"website\"\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: `${process.env.NEXT_PUBLIC_FRONT_END_DOMAIN}/posts/tag/${tag ? tag : ''}}`\n  }), __jsx(\"meta\", {\n    name: \"twitter:title\",\n    content: `Posts ${tag ? '| - Articles about' + tag : ''}`\n  }), __jsx(\"meta\", {\n    name: \"twitter:description\",\n    content: \"My ramblings about things that excite me. Might take some time to read but will definitely be worth your time.\"\n  })), __jsx(Page, null, __jsx(PageHeader, {\n    title: \"Posts\",\n    description: \"My ramblings about things that excite me. Might take some time to read but will definitely be worth your time.\"\n  }), __jsx(PageBody, null, __jsx(motion.div, {\n    variants: postsContainerVariants\n  }, __jsx(InfiniteScroll, {\n    className: \"flex flex-wrap justify-start -mx-4\",\n    dataLength: posts.length,\n    next: fetchMorePosts,\n    hasMore: hasMore,\n    loader: null\n  }, posts.map(post => __jsx(PostTile, {\n    key: post.slug,\n    post: post\n  })))))));\n};\n\nexport default PostsPage;","map":null,"metadata":{},"sourceType":"module"}