{"ast":null,"code":"import camelcase from 'camelcase';\n/**\r\n * Takes an object as argument and for each key in the object adds a camel case variant of the key.\r\n * @param input T The object for which camel cased keys are to be added.\r\n */\n\nexport function addCamelCaseKeys(input) {\n  const output = Object.assign({}, input);\n  Object.keys(input).forEach(key => {\n    const transformedKey = key.replace(/--/g, '-');\n    output[camelcase(transformedKey)] = input[key];\n  });\n  return output;\n}\n/**\r\n * Rounds the given value a even number.\r\n * @param val The value to be rounded to a even number.\r\n */\n\nexport function roundToEven(val) {\n  val = Math.floor(val);\n\n  if (val % 2) {\n    return val + 1;\n  }\n\n  return val;\n}\n/**\r\n * Converts any date string to <month> <day>, <year> format.\r\n * @param date Any string valid for {@link Date}.\r\n */\n\nexport function formatDate(date) {\n  if (date) {\n    const dateString = new Date(date).toDateString();\n    const [_, month, day, year] = dateString.split(' ');\n    return `${day} ${month}, ${year}`;\n  }\n\n  return '';\n}\n/**\r\n * Generates a random number between a given range.\r\n * @param min The start of the range.\r\n * @param max The end of the range.\r\n */\n\nexport function randomBetween(min, max) {\n  const minimum = Math.min(min, max);\n  const maximum = Math.min(min, max);\n  const range = maximum - minimum;\n  return minimum + Math.floor(Math.random() * range);\n}","map":null,"metadata":{},"sourceType":"module"}