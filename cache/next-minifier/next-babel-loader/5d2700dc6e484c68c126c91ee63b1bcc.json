{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport { API_URLS } from '../../constants';\nimport RelatedPost from '../related-post/RelatedPost.component';\n/**\r\n * Props for {@link RelatedPostsSection} component.\r\n */\n\n/**\r\n * Displays an horizontally scrollable small post tiles.\r\n */\nvar RelatedPostsSection = function RelatedPostsSection(_ref) {\n  var tag = _ref.tag,\n      _ref$showTitle = _ref.showTitle,\n      showTitle = _ref$showTitle === void 0 ? true : _ref$showTitle;\n\n  var _useState = useState([]),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  useEffect(function () {\n    var fetchPosts = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var params, url, response, newPosts;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                params = new URLSearchParams({\n                  page: '1',\n                  per_page: '10',\n                  tag: tag\n                });\n                url = \"\".concat(API_URLS.POSTS, \"?\").concat(params);\n                console.log('Fetching posts', url);\n                _context.next = 5;\n                return fetch(url);\n\n              case 5:\n                response = _context.sent;\n                _context.next = 8;\n                return response.json();\n\n              case 8:\n                newPosts = _context.sent;\n                setPosts(newPosts);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchPosts() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    fetchPosts();\n  }, [tag]);\n  return __jsx(\"div\", null, showTitle && __jsx(\"h2\", {\n    className: \"text-primary font-bold\"\n  }, \"Related\"), __jsx(\"div\", {\n    className: \"w-full flex overflow-y-hidden\"\n  }, posts.map(function (post) {\n    return __jsx(RelatedPost, {\n      key: post.slug,\n      post: post\n    });\n  })));\n};\n\nexport default RelatedPostsSection;","map":null,"metadata":{},"sourceType":"module"}