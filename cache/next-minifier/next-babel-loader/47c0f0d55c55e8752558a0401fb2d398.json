{"ast":null,"code":"/**\r\n * Serverless funciton for /api/nuggets.\r\n * Fetches nuggets from DEV.to with given params.\r\n */\nexport default (async (req, res) => {\n  try {\n    const {\n      page,\n      per_page,\n      tag\n    } = req.query;\n    const nuggets = await getNuggets({\n      page: String(page),\n      per_page: String(per_page),\n      tag: String(tag)\n    });\n    res.status(200).json(nuggets);\n  } catch (e) {\n    res.status(500).send('Internal Server Error.');\n  }\n});\n/**\r\n * Props for {@link getNuggets}.\r\n */\n\n/**\r\n * Retrieves a list of articles from DEV.to for matching query params.\r\n * @param param of type {@link GetNuggetsProps}.\r\n */\nexport async function getNuggets({\n  page = '1',\n  per_page = process.env.NUGGETS_PER_PAGE,\n  tag = ''\n} = {}) {\n  console.log('Getting nuggets: ', page, per_page, tag);\n  const headers = new Headers();\n  headers.append('api-key', process.env.DEV_TO_TOKEN);\n  const url = `https://dev.to/api/articles?`;\n  const params = new URLSearchParams({\n    page,\n    per_page: '100'\n  });\n  console.log(url + params);\n  const response = await fetch(url + params, {\n    headers\n  });\n  let nuggets = await response.json();\n  nuggets = nuggets.filter(nugget => {\n    return nugget.tag_list.includes('nuggets') && (tag ? nugget.tag_list.includes(tag) : true);\n  });\n  const start = (+page - 1) * +per_page;\n  const end = start + +per_page;\n  console.log('Start: ', start, ' End: ', end);\n  nuggets = nuggets.slice(start, end);\n  return nuggets;\n}","map":null,"metadata":{},"sourceType":"module"}