{"ast":null,"code":"var __jsx = React.createElement;\nimport { motion } from 'framer-motion';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport React from 'react';\nimport withPageTransition from '../../../components/hoc/with-page-transition';\nimport MdContent from '../../../components/md-content/MdContent';\nimport PageBody from '../../../components/page-body/PageBody';\nimport Page from '../../../components/page/Page';\nimport SocialShare from '../../../components/social-share/SocialShare.component';\nimport { formatDate } from '../../../lib';\nimport ShareSection from '../../../posts/share-section/ShareSection.component';\nimport { getNuggets } from '../../api/nuggets';\nimport { getNuggetById } from '../../api/nuggets/[id]';\n/**\r\n * Placeholder animation variant for the header section.\r\n */\n\nconst headerVariants = {\n  initial: {\n    opacity: 0\n  },\n  enter: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.5,\n      when: 'beforeChildren'\n    }\n  }\n};\n/**\r\n * Animation variants for the header children.\r\n */\n\nexport const headerChildrenVariants = {\n  initial: {\n    opacity: 0,\n    transform: 'translateY(50%)'\n  },\n  enter: {\n    opacity: 1,\n    transform: 'translateY(0%)',\n    transition: {\n      duration: 0.8,\n      ease: 'easeOut'\n    }\n  }\n};\n/**\r\n * Animation variants for the line after header.\r\n */\n\nconst hrVariants = {\n  initial: {\n    opacity: 0,\n    scale: 0\n  },\n  enter: {\n    opacity: 1,\n    scale: 1,\n    transition: {\n      delay: 1.2,\n      duration: 1,\n      ease: 'easeOut'\n    }\n  }\n};\n/**\r\n * Animation variants for the page content.\r\n */\n\nconst nuggetContentVariants = {\n  initial: {\n    opacity: 0,\n    transform: 'translateY(2%)'\n  },\n  enter: {\n    opacity: 1,\n    transform: 'translateY(0%)',\n    transition: {\n      delay: 1.2,\n      duration: 1,\n      ease: 'easeOut'\n    }\n  }\n};\nexport const getStaticPaths = async () => {\n  try {\n    console.log('\\nRunning getStaticPaths for nuggets/[id]/[slug]');\n    const nuggets = await getNuggets({\n      per_page: '50'\n    });\n    const paths = nuggets.map(nugget => ({\n      params: {\n        id: String(nugget.id),\n        slug: nugget.slug\n      }\n    }));\n    console.log('\\nNumber of nuggets pre-rendered: ', nuggets.length);\n    return {\n      paths,\n      fallback: true\n    };\n  } catch (e) {\n    console.error('Error while fetching static paths for nuggets: ', e);\n  }\n};\n/**\r\n * Props for {@link NuggetPage}.\r\n */\n\nexport const getStaticProps = async ({\n  params\n}) => {\n  try {\n    console.log('\\nRunning getStaticProps for nugget with id: ', params.id);\n    const nugget = await getNuggetById(params.id);\n    nugget.body_markdown = nugget.body_markdown.substring(nugget.body_markdown.lastIndexOf(nugget.description.substring(0, 10)));\n    return {\n      props: {\n        nugget\n      },\n      revalidate: 300\n    };\n  } catch (e) {\n    console.error('Error while fetching getStaticProps nugget by id: ', params.id, e);\n  }\n};\n/**\r\n * Represents a page for a single instance of a nugget.\r\n */\n\nconst NuggetPage = ({\n  nugget = {}\n}) => {\n  return __jsx(Page, null, __jsx(Head, null, __jsx(\"title\", null, nugget.title), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: nugget.title\n  }), __jsx(\"meta\", {\n    property: \"og:type\",\n    content: \"article\"\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: `${process.env.NEXT_PUBLIC_FRONT_END_DOMAIN}/nuggets/${nugget.id}/${nugget.slug}`\n  }), __jsx(\"meta\", {\n    name: \"twitter:title\",\n    content: nugget.title\n  }), __jsx(\"meta\", {\n    name: \"twitter:description\",\n    content: nugget.description\n  })), __jsx(motion.div, {\n    className: \"text-center mb-8 lg:mb-16 overflow-hidden\",\n    variants: headerVariants\n  }, __jsx(motion.h1, {\n    className: \"font-black text-primary mb-4 leading-tight\",\n    variants: headerChildrenVariants\n  }, nugget.title), __jsx(motion.div, {\n    className: \"font-bold text-lg lg:text-xl text-secondary\",\n    variants: headerChildrenVariants\n  }, __jsx(\"span\", null, formatDate(nugget.published_timestamp)), __jsx(\"span\", {\n    className: \"px-2\"\n  }, \"\\u2022\"), __jsx(\"span\", null, nugget.readingTime)), __jsx(motion.div, {\n    className: \"text-secondary-text text-md lg:text-lg mb-2 font-bold\",\n    variants: headerChildrenVariants\n  }, nugget.tag_list && nugget.tag_list.map(tag => {\n    return __jsx(Link, {\n      key: tag,\n      href: \"/nuggets/tag/[tag]\",\n      as: `/nuggets/tag/${tag}`\n    }, __jsx(\"a\", {\n      className: \"inline-block ul-hover-effect mr-2\"\n    }, \"#\", tag));\n  })), __jsx(motion.div, {\n    className: \"flex justify-center\",\n    variants: headerChildrenVariants\n  }, __jsx(SocialShare, {\n    item: nugget,\n    url: `${process.env.NEXT_PUBLIC_FRONT_END_DOMAIN}/nuggets/${nugget.id}/${nugget.slug}`\n  }))), __jsx(PageBody, null, __jsx(motion.div, {\n    className: \"bg-dark-light sm: mb-8\",\n    style: {\n      height: '1px'\n    },\n    variants: hrVariants\n  }), __jsx(motion.div, {\n    variants: nuggetContentVariants\n  }, __jsx(MdContent, null, nugget.body_markdown)), __jsx(ShareSection, {\n    item: nugget\n  })));\n};\n\nexport default withPageTransition(NuggetPage);","map":null,"metadata":{},"sourceType":"module"}